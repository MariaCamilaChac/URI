package printer;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Counting {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
		BufferedWriter bw = new BufferedWriter (new OutputStreamWriter (System.out));
		int n;
		int q, cases=1, t, index;
		String input = br.readLine();
		
		
		
		while (! input.equals("0 0")) {
			
			bw.write(" case # "+ cases + ":");
			
			n= Integer.parseInt(input.split(" ")[0]);
			q=Integer.parseInt(input.split(" ")[1]);
			
			int []array = new int [n];
			for (int i = 0; i < n; i++) 
				array[i] = Integer.parseInt(br.readLine());
			
			array = countingSort(array.clone());
			
			for (int i = 0; i < array.length; i++) {
				
				t = Integer.parseInt(br.readLine());
				index = BinarySort(array,t);
				
				if (index != -1) {
					bw.write(t + "found at " + (index + 1 + "n" ));
				}else
					bw.write(t + "not found \n");
			}
			
		}
		
		
	}
	public static int [] countingSort(int [] unsorted) {
		
		int [] sorted = new int [unsorted.length];
		int [] aux = new int [10001];
		int index = 0;
		for (int i = 0; i < unsorted.length; i++) 
			aux[unsorted[i]] += 1;
		
		
		for (int i = 0; i < aux.length; i++) 
			if(aux [i] !=0 ) 
				for (int j = 0; j < aux[i]; j++) {
					sorted[index]=i;
					index +=1;
				
			
		}

		return sorted;
	}
	
	public static int BinarySort (int array[], int i) {
		return 0;
		
	}

}
